# Kernel DTB build targets

KERNEL_DEVICETREE_UNFILTERED?=$(shell find $(LINUXKERNEL_INSTALL_DIR)/arch/arm/boot/dts -printf '%P\n' | grep -wE '($(KERNEL_DEVICETREE_PREFIX)).*.dts[o]?' | sed "s/dts/dtb/g" )
KERNEL_DEVICETREE=$(filter-out .%,$(KERNEL_DEVICETREE_UNFILTERED))

linux-dtbs:
	@echo =====================================
	@echo     Building the Linux Kernel DTBs
	@echo =====================================
	$(MAKE) -C $(LINUXKERNEL_INSTALL_DIR) ARCH=$(ARCH) CROSS_COMPILE=$(CROSS_COMPILE) multi_v7_defconfig ti_multi_v7_prune.config no_smp.config $(RT_FRAGMENT)
	@for DTB in $(KERNEL_DEVICETREE); do \
		$(MAKE) -j $(MAKE_JOBS) -C $(LINUXKERNEL_INSTALL_DIR) DTC_FLAGS=-@ ARCH=$(ARCH) CROSS_COMPILE=$(CROSS_COMPILE) $$DTB; \
	done

linux-dtbs_stage:
	mkdir -p $(TI_SDK_PATH)/board-support/built-images/dtb/ti
	@for DTB in $(KERNEL_DEVICETREE); do \
		cp $(LINUXKERNEL_INSTALL_DIR)/arch/arm/boot/dts/$$DTB $(TI_SDK_PATH)/board-support/built-images/dtb/ti; \
	done

linux-dtbs_install: linux-dtbs_stage
	@echo =======================================
	@echo     Installing the Linux Kernel DTBs
	@echo =======================================
	@if [ ! -d $(DESTDIR) ] ; then \
		echo "The extracted target filesystem directory doesn't exist."; \
		echo "Please run setup.sh in the SDK's root directory and then try again."; \
		exit 1; \
	fi
	@for DTB in $(KERNEL_DEVICETREE); do \
		install -m 0644 $(TI_SDK_PATH)/board-support/built-images/dtb/ti/$$(basename $$DTB) $(DESTDIR); \
	done

linux-dtbs_clean:
	@echo =======================================
	@echo     Cleaning the Linux Kernel DTBs
	@echo =======================================
	@echo "Nothing to do"
