# Kernel DTB build targets

KERNEL_DEVICETREE?=$(shell find $(LINUXKERNEL_INSTALL_DIR)/arch/arm64/boot/dts -printf '%P\n' | grep -wE '($(KERNEL_DEVICETREE_PREFIX)).*\.dts[o]?' | sed "s/dts/dtb/g" )
KERNEL_DEVICETREE += $(shell grep -F 'dtb-$$(CONFIG_ARCH_K3)' $(LINUXKERNEL_INSTALL_DIR)/arch/arm64/boot/dts/ti/Makefile | awk '{print $$NF}' | grep -E "$(subst ti/,,$(KERNEL_DEVICETREE_PREFIX))" | sed 's|^|ti/|')
KERNEL_DEVICETREE := $(shell echo "$(KERNEL_DEVICETREE)" | tr ' ' '\n' | sort -u)

linux-dtbs:
	@echo =====================================
	@echo     Building the Linux Kernel DTBs
	@echo =====================================
	$(MAKE) -C $(LINUXKERNEL_INSTALL_DIR) ARCH=$(ARCH) CROSS_COMPILE=$(CROSS_COMPILE) defconfig ti_arm64_prune.config $(RT_FRAGMENT)
	@for DTB in $(KERNEL_DEVICETREE); do \
		$(MAKE) -j $(MAKE_JOBS) -C $(LINUXKERNEL_INSTALL_DIR) DTC_FLAGS=-@ ARCH=$(ARCH) CROSS_COMPILE=$(CROSS_COMPILE) $$DTB; \
	done

linux-dtbs_stage:
	mkdir -p $(TI_SDK_PATH)/board-support/built-images/dtb/ti
	@for DTB in $(KERNEL_DEVICETREE); do \
		cp $(LINUXKERNEL_INSTALL_DIR)/arch/arm64/boot/dts/$$DTB $(TI_SDK_PATH)/board-support/built-images/dtb/ti; \
	done

linux-dtbs_install: linux-dtbs_stage
	@echo =======================================
	@echo     Installing the Linux Kernel DTBs
	@echo =======================================
	@if [ ! -d $(DESTDIR) ] ; then \
		echo "The extracted target filesystem directory doesn't exist."; \
		echo "Please run setup.sh in the SDK's root directory and then try again."; \
		exit 1; \
	fi
	install -d $(DESTDIR)/boot/dtb/ti
	@for DTB in $(KERNEL_DEVICETREE); do \
		install -m 0644 $(TI_SDK_PATH)/board-support/built-images/dtb/ti/$$(basename $$DTB) $(DESTDIR)/boot/dtb/ti/; \
	done

linux-dtbs_clean:
	@echo =======================================
	@echo     Cleaning the Linux Kernel DTBs
	@echo =======================================
	@echo "Nothing to do"
